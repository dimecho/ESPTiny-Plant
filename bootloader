#!/bin/sh

cd "$(dirname "$0")"

#==============
#Download Tool
#==============
mkdir -p tools
if [ ! -f tools/esptool.py ]; then
    curl -L -o tools/esptool.py -k -C - https://raw.githubusercontent.com/espressif/esptool/master/esptool.py
fi

#==============
#Download SDK
#==============
mkdir -p sdk
if [ ! -f sdk/espressif/boot_v1.7.bin ]; then
    curl -L -o sdk/v3.0.4.zip -k -C - https://github.com/espressif/ESP8266_NONOS_SDK/archive/v3.0.4.zip
    cd sdk
    unzip v3.0.4.zip
    rm -rf v3.0.4.zip
    cp -R ESP8266_NONOS_SDK-3.0.4/bin ./
    rm -rf ESP8266_NONOS_SDK-3.0.4
    mv bin ./espressif
    cd ../
fi

echo " > Flash SDK/Bootloader? (y/n)"
read yn
if [ $yn = y ]; then

	shopt -s nocasematch
	        
	cu=$(ls /dev/cu.* && ls /dev/ttyUSB*)
	for serial in $cu; do
	    if [[ $serial == *usb* ]] || [[ $serial == *ch34* ]] || [[ $serial == *pl23* ]] ; then
	    	#python tools/esptool.py --port $serial erase_flash
			#ESP-01
			#python tools/esptool.py --port $serial --baud 115200 --chip esp8266 write_flash -fm qio --flash_size 1MB 0xFB000 ./sdk/espressif/blank.bin 0xFC000 ./sdk/espressif/esp_init_data_default_v08.bin 0x7E000 ./sdk/espressif/blank.bin 0xFE000 ./sdk/espressif/blank.bin 0x00000 ./sdk/espressif/boot_v1.7.bin 0x01000 ./sdk/espressif/at/512+512/user1.1024.new.2.bin
	        #ESP-12E/F/S
			python tools/esptool.py --port $serial --baud 115200 --chip esp8266 write_flash -fm qio --flash_size 4MB 0x3FC000 ./sdk/espressif/esp_init_data_default_v08.bin 0xFE000 ./sdk/espressif/blank.bin 0x3FE000 ./sdk/espressif/blank.bin 0x00000 ./sdk/espressif/boot_v1.7.bin 0x01000 ./sdk/espressif/at/1024+1024/user1.2048.new.5.bin
	       	##python tools/esptool.py --port $serial --baud 115200 --chip esp8266 write_flash -fm qio --flash_size 4MB 0x00000 ./sdk/nodemcu/nodemcu-integer.bin
	        break
	    fi
	done
fi